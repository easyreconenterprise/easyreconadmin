{"version":3,"sources":["../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Add.js","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","options","ConfirmationDialogRaw","props","onClose","valueProp","open","other","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","setValue","radioGroupRef","useRef","useEffect","_jsxs","Dialog","_objectSpread","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","children","_jsx","DialogTitle","id","DialogContent","dividers","RadioGroup","ref","name","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","variant","color","onClick","DialogRoot","styled","_ref","width","backgroundColor","theme","palette","background","paper","maxHeight","ConfirmationDialog","_React$useState","React","_React$useState2","setOpen","_React$useState3","_React$useState4","List","component","role","ListItem","button","divider","disabled","ListItemText","primary","secondary","keepMounted","className","DialogTitleRoot","MuiDialogTitle","margin","padding","spacing","position","right","top","grey","disableTypography","Typography","IconButton","CloseIcon","MuiDialogContent","_ref2","MuiDialogActions","_ref3","CustomizedDialogs","handleClose","gutterBottom","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","DialogContentText","FullScreenDialog","useTheme","Box","fullScreen","AppBar","sx","Toolbar","edge","H6","flex","marginLeft","Divider","display","flexDirection","marginTop","minWidth","MaxWidthDialog","fullWidth","setFullWidth","_React$useState5","_React$useState6","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","autoFocus","AlertDialog","getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ListItemAvatarRoot","overridesResolver","styles","ownerState","root","alignItems","alignItemsFlexStart","_extends","flexShrink","ListItemAvatar","inProps","useThemeProps","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","clsx","emails","SimpleDialog","selectedValue","handleListItemClick","email","Avatar","blue","PersonIcon","AddIcon","SimpleDialogDemo","_useState3","_useState4","setSelectedValue","Container","_defineProperty","marginBottom","AppDialog","Breadcrumb","routeSegments","path","Stack","SimpleCard","title","FormDialog"],"mappings":"iHAEA,IAAIA,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJP,EAAQE,QAAUG,C,mCCflB,IAAIT,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kHACD,UAEJP,EAAQE,QAAUG,C,mCCflB,IAAIT,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,wCACD,OAEJP,EAAQE,QAAUG,C,qQCFZG,EAAU,CACd,OACA,QACA,WACA,QACA,WACA,gBACA,OACA,SACA,SACA,QACA,QACA,UACA,SACA,WAGF,SAASC,EAAsBC,GAC7B,IAAQC,EAA8CD,EAA9CC,QAAgBC,EAA8BF,EAArCT,MAAkBY,EAAmBH,EAAnBG,KAASC,EAAKC,YAAKL,EAAKM,GAC3DC,EAA0BC,mBAASN,GAAUO,EAAAC,YAAAH,EAAA,GAAtChB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAgBC,iBAAO,MAE7BC,qBAAU,WACHX,GACHQ,EAAST,EAEb,GAAG,CAACA,EAAWC,IAaf,OACEY,eAACC,IAAMC,wBAAA,CACLC,SAAS,KACTC,sBAAoB,EACpBC,gBAAiB,CAAEC,UAfvB,WACgC,OAA1BT,EAAcU,SAChBV,EAAcU,QAAQC,OAE1B,GAYI,kBAAgB,4BAChBpB,KAAMA,GACFC,GAAK,IAAAoB,SAAA,CAETC,cAACC,IAAW,CAACC,GAAG,4BAA2BH,SAAC,mBAC5CC,cAACG,IAAa,CAACC,UAAQ,EAAAL,SACrBC,cAACK,IAAU,CACTC,IAAKnB,EACL,aAAW,WACXoB,KAAK,WACLzC,MAAOA,EACP0C,SAlBa,SAACC,EAAGC,GAAQ,OAAKxB,EAASwB,EAAU,EAkB1BX,SAEtB1B,EAAQsC,KAAI,SAACC,GAAM,OAClBZ,cAACa,IAAgB,CAAC/C,MAAO8C,EAAqBE,QAASd,cAACe,IAAK,IAAKC,MAAOJ,GAAnCA,EAA6C,QAIzFtB,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAYC,QA7B9B,WAAH,OAAS7C,GAAU,EA6BoCuB,SAAC,WAGpEC,cAACkB,IAAM,CAACG,QA/BG,WAAH,OAAS7C,EAAQV,EAAO,EA+BLsD,MAAM,UAASrB,SAAC,aAMnD,CAQA,IAAMuB,EAAaC,YAAO,MAAPA,EAAc,SAAAC,GAAQ,MAAQ,CAC/CC,MAAO,OACPhC,SAAU,IACViC,gBAHuCF,EAALG,MAGXC,QAAQC,WAAWC,MAC1C,WAAY,CAAEL,MAAO,MAAOM,UAAW,KACxC,IAEc,SAASC,IACtB,IAAAC,EAAwBC,IAAMnD,UAAS,GAAMoD,EAAAlD,YAAAgD,EAAA,GAAtCvD,EAAIyD,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAA0BH,IAAMnD,SAAS,SAAQuD,EAAArD,YAAAoD,EAAA,GAA1CvE,EAAKwE,EAAA,GAAEpD,EAAQoD,EAAA,GActB,OACEtC,cAACsB,EAAU,CAAAvB,SACTT,eAACiD,IAAI,CAACC,UAAU,MAAMC,KAAK,OAAM1C,SAAA,CAC/BC,cAAC0C,IAAQ,CAACC,QAAM,EAACC,SAAO,EAACC,UAAQ,EAACJ,KAAK,WAAU1C,SAC/CC,cAAC8C,IAAY,CAACC,QAAQ,oBAGxB/C,cAAC0C,IAAQ,CACPC,QAAM,EACNC,SAAO,EACP,gBAAc,gBACd,aAAW,iBACXvB,QAxBR,WACEe,GAAQ,EACV,EAuBQK,KAAK,WAAU1C,SAEfC,cAAC8C,IAAY,CAACC,QAAQ,iBAAiBC,UAAWlF,MAGpDkC,cAAC0C,IAAQ,CAACC,QAAM,EAACC,SAAO,EAACC,UAAQ,EAACJ,KAAK,WAAU1C,SAC/CC,cAAC8C,IAAY,CAACC,QAAQ,gCAAgCC,UAAU,aAGlEhD,cAAC1B,EAAqB,CACpB2E,aAAW,EACXvE,KAAMA,EACNZ,MAAOA,EACPoF,UAAU,QACVhD,GAAG,gBACH1B,QApCR,SAAqBkC,GACnB0B,GAAQ,GAEJ1B,GACFxB,EAASwB,EAEb,QAmCF,C,wCC5IMyC,EAAkB5B,YAAO6B,IAAP7B,EAAuB,SAAAC,GAAA,IAAGG,EAAKH,EAALG,MAAK,MAAQ,CAC7D0B,OAAQ,EACRC,QAAS3B,EAAM4B,QAAQ,GACvB,iBAAkB,CAChBC,SAAU,WACVC,MAAO9B,EAAM4B,QAAQ,GACrBG,IAAK/B,EAAM4B,QAAQ,GACnBnC,MAAOO,EAAMC,QAAQ+B,KAAK,MAE7B,IAEK1D,EAAc,SAAC1B,GACnB,IAAQwB,EAAsBxB,EAAtBwB,SAAUvB,EAAYD,EAAZC,QAClB,OACEc,eAAC6D,EAAe,CAACS,mBAAiB,EAAA7D,SAAA,CAChCC,cAAC6D,IAAU,CAAC1C,QAAQ,KAAIpB,SAAEA,IACzBvB,EACCwB,cAAC8D,IAAU,CAAC,aAAW,QAAQZ,UAAU,cAAc7B,QAAS7C,EAAQuB,SACtEC,cAAC+D,IAAS,MAEV,OAGV,EAEM5D,EAAgBoB,YAAOyC,IAAPzC,EAAyB,SAAA0C,GAAQ,MAAQ,CAC7D,SAAU,CAAEX,QADyCW,EAALtC,MACrB4B,QAAQ,IACpC,IAEKtC,EAAgBM,YAAO2C,IAAP3C,EAAyB,SAAA4C,GAAQ,MAAQ,CAC7D,SAAU,CAAEd,OAAQ,EAAGC,QAD8Ba,EAALxC,MACV4B,QAAQ,IAC/C,IAgDca,EA9CW,WACxB,IAAAtF,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCJ,EAAIM,EAAA,GAAEoD,EAAOpD,EAAA,GAIdqF,EAAc,WAAH,OAASjC,GAAQ,EAAO,EAEzC,OACE9C,eAAA,OAAAS,SAAA,CACEC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAYC,QANzB,WAAH,OAASe,GAAQ,EAAM,EAM8BrC,SAAC,gBAIvET,eAACC,IAAM,CAACf,QAAS6F,EAAa,kBAAgB,0BAA0B3F,KAAMA,EAAKqB,SAAA,CACjFC,cAACC,EAAW,CAACC,GAAG,0BAA0B1B,QAAS6F,EAAYtE,SAAC,gBAIhET,eAACa,EAAa,CAACC,UAAQ,EAAAL,SAAA,CACrBC,cAAC6D,IAAU,CAACS,cAAY,EAAAvE,SAAC,iLAKzBC,cAAC6D,IAAU,CAACS,cAAY,EAAAvE,SAAC,+IAKzBC,cAAC6D,IAAU,CAACS,cAAY,EAAAvE,SAAC,kMAO3BC,cAACiB,EAAa,CAAAlB,SACZC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAASrB,SAAC,wBAOxD,E,kBC/EMwE,EAAarC,IAAMsC,YAAW,SAAoBjG,EAAO+B,GAC7D,OAAON,cAACyE,IAAKjF,YAAA,CAACkF,UAAU,KAAKpE,IAAKA,GAAS/B,GAC7C,IAEe,SAASoG,IACtB,IAAA1C,EAAwBC,IAAMnD,UAAS,GAAMoD,EAAAlD,YAAAgD,EAAA,GAAtCvD,EAAIyD,EAAA,GAAEC,EAAOD,EAAA,GAMpB,SAASkC,IACPjC,GAAQ,EACV,CAEA,OACE9C,eAAA,OAAAS,SAAA,CACEC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAV/C,WACEe,GAAQ,EACV,EAQwErC,SAAC,0BAGrET,eAACC,IAAM,CACLb,KAAMA,EACNuE,aAAW,EACXzE,QAAS6F,EACTO,oBAAqBL,EACrB,kBAAgB,2BAChB,mBAAiB,iCAAgCxE,SAAA,CAEjDC,cAACC,IAAW,CAACC,GAAG,2BAA0BH,SAAC,mCAE3CC,cAACG,IAAa,CAAAJ,SACZC,cAAC6E,IAAiB,CAAC3E,GAAG,iCAAgCH,SAAC,oIAMzDT,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAASrB,SAAC,aAI9CC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAASrB,SAAC,kBAOxD,C,gEC1CMwE,EAAarC,IAAMsC,YAAW,SAAoBjG,EAAO+B,GAC7D,OAAON,cAACyE,IAAKjF,YAAA,CAACkF,UAAU,KAAKpE,IAAKA,GAAS/B,GAC7C,IAEe,SAASuG,IACtB,IAAMnD,EAAQoD,cACd9C,EAAwBC,IAAMnD,UAAS,GAAMoD,EAAAlD,YAAAgD,EAAA,GAAtCvD,EAAIyD,EAAA,GAAEC,EAAOD,EAAA,GAKpB,SAASkC,IACPjC,GAAQ,EACV,CAEA,OACE9C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAT/C,WACEe,GAAQ,EACV,EAOwErC,SAAC,4BAIrET,eAACC,IAAM,CAAC0F,YAAU,EAACvG,KAAMA,EAAMF,QAAS6F,EAAaO,oBAAqBL,EAAWxE,SAAA,CACnFC,cAACkF,IAAM,CAACC,GAAI,CAAE3B,SAAU,YAAazD,SACnCT,eAAC8F,IAAO,CAAArF,SAAA,CACNC,cAAC8D,IAAU,CAACuB,KAAK,QAAQjE,MAAM,UAAUC,QAASgD,EAAa,aAAW,QAAOtE,SAC/EC,cAAC+D,IAAS,MAEZ/D,cAACsF,IAAE,CAACH,GAAI,CAAEI,KAAM,EAAGC,WAAY7D,EAAM4B,QAAQ,IAAKxD,SAAC,UACnDC,cAACkB,IAAM,CAACE,MAAM,UAAUC,QAASgD,EAAYtE,SAAC,cAMlDT,eAACiD,IAAI,CAAAxC,SAAA,CACHC,cAAC0C,IAAQ,CAACC,QAAM,EAAA5C,SACdC,cAAC8C,IAAY,CAACC,QAAQ,iBAAiBC,UAAU,cAGnDhD,cAACyF,IAAO,IAERzF,cAAC0C,IAAQ,CAACC,QAAM,EAAA5C,SACdC,cAAC8C,IAAY,CAACC,QAAQ,gCAAgCC,UAAU,qBAM5E,C,oDCjDM1B,GAAaC,YAAO,MAAPA,EAAc,SAAAC,GAAA,IAAGG,EAAKH,EAALG,MAAK,MAAQ,CAC/C,SAAU,CACR+D,QAAS,OACTrC,OAAQ,OACRsC,cAAe,SACflE,MAAO,eAET,iBAAkB,CAChBmE,UAAWjE,EAAM4B,QAAQ,GACzBsC,SAAU,KAEZ,sBAAuB,CACrBD,UAAWjE,EAAM4B,QAAQ,IAE5B,IAEc,SAASuC,KACtB,IAAA7D,EAAwBC,IAAMnD,UAAS,GAAMoD,EAAAlD,YAAAgD,EAAA,GAAtCvD,EAAIyD,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAAkCH,IAAMnD,UAAS,GAAKuD,EAAArD,YAAAoD,EAAA,GAA/C0D,EAASzD,EAAA,GAAE0D,EAAY1D,EAAA,GAC9B2D,EAAgC/D,IAAMnD,SAAS,MAAKmH,EAAAjH,YAAAgH,EAAA,GAA7CxG,EAAQyG,EAAA,GAAEC,EAAWD,EAAA,GAK5B,SAAS7B,IACPjC,GAAQ,EACV,CAQA,OACE9C,eAACgC,GAAU,CAAAvB,SAAA,CACTC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAf/C,WACEe,GAAQ,EACV,EAawErC,SAAC,0BAIrET,eAACC,IAAM,CACLb,KAAMA,EACNqH,UAAWA,EACXtG,SAAUA,EACVjB,QAAS6F,EACT,kBAAgB,yBAAwBtE,SAAA,CAExCC,cAACC,IAAW,CAACC,GAAG,yBAAwBH,SAAC,mBAEzCT,eAACa,IAAa,CAAAJ,SAAA,CACZC,cAAC6E,IAAiB,CAAA9E,SAAC,8DAInBT,eAAA,QAAM8G,YAAU,EAAArG,SAAA,CACdT,eAAC+G,IAAW,CAACnD,UAAU,cAAanD,SAAA,CAClCC,cAACsG,IAAU,CAACC,QAAQ,YAAWxG,SAAC,aAChCT,eAACkH,KAAM,CACL1I,MAAO2B,EACPe,SAhCd,SAA8BiG,GAC5BN,EAAYM,EAAMC,OAAO5I,MAC3B,EA+Bc6I,WAAY,CAAEpG,KAAM,YAAaL,GAAI,aAAcH,SAAA,CAEnDC,cAAC4G,KAAQ,CAAC9I,OAAO,EAAMiC,SAAC,UACxBC,cAAC4G,KAAQ,CAAC9I,MAAM,KAAIiC,SAAC,OACrBC,cAAC4G,KAAQ,CAAC9I,MAAM,KAAIiC,SAAC,OACrBC,cAAC4G,KAAQ,CAAC9I,MAAM,KAAIiC,SAAC,OACrBC,cAAC4G,KAAQ,CAAC9I,MAAM,KAAIiC,SAAC,OACrBC,cAAC4G,KAAQ,CAAC9I,MAAM,KAAIiC,SAAC,aAIzBC,cAACa,IAAgB,CACfqC,UAAU,mBACVlC,MAAM,aACNF,QACEd,cAAC6G,KAAM,CAACC,QAASf,EAAWvF,SA7C1C,SAA+BiG,GAC7BT,EAAaS,EAAMC,OAAOI,QAC5B,EA2C2EhJ,MAAM,sBAM3EkC,cAACiB,IAAa,CAAAlB,SACZC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAASrB,SAAC,iBAOxD,C,cC7Fe,SAASgH,KACtB,IAAA9E,EAAwBC,IAAMnD,UAAS,GAAMoD,EAAAlD,YAAAgD,EAAA,GAAtCvD,EAAIyD,EAAA,GAAEC,EAAOD,EAAA,GACdR,EAAQoD,cACRE,EAAa+B,aAAcrF,EAAMsF,YAAYC,KAAK,OAMxD,SAAS7C,IACPjC,GAAQ,EACV,CAEA,OACE9C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAV/C,WACEe,GAAQ,EACV,EAQwErC,SAAC,2BAIrET,eAACC,IAAM,CACL0F,WAAYA,EACZvG,KAAMA,EACNF,QAAS6F,EACT,kBAAgB,0BAAyBtE,SAAA,CAEzCC,cAACC,IAAW,CAACC,GAAG,0BAAyBH,SAAC,mCAE1CC,cAACG,IAAa,CAAAJ,SACZC,cAAC6E,IAAiB,CAAA9E,SAAC,oIAMrBT,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAASrB,SAAC,aAI9CC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAAU+F,WAAS,EAAApH,SAAC,kBAOlE,CChDe,SAASqH,KACtB,IAAAtI,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCJ,EAAIM,EAAA,GAAEoD,EAAOpD,EAAA,GAGdqF,EAAc,WAAH,OAASjC,GAAQ,EAAO,EAEzC,OACE9C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QALvB,WAAH,OAASe,GAAQ,EAAM,EAK4BrC,SAAC,sBAIrET,eAACC,IAAM,CACLb,KAAMA,EACNF,QAAS6F,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BtE,SAAA,CAE3CC,cAACC,IAAW,CAACC,GAAG,qBAAoBH,SAAC,mCAErCC,cAACG,IAAa,CAAAJ,SACZC,cAAC6E,IAAiB,CAAC3E,GAAG,2BAA0BH,SAAC,oIAMnDT,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAASrB,SAAC,aAI9CC,cAACkB,IAAM,CAACG,QAASgD,EAAajD,MAAM,UAAU+F,WAAS,EAAApH,SAAC,kBAOlE,C,gJC9CO,SAASsH,GAA8BC,GAC5C,OAAOC,aAAqB,oBAAqBD,EACnD,CAC8BE,aAAuB,oBAAqB,CAAC,OAAQ,wBAAnF,ICHM3I,GAAY,CAAC,aAoBb4I,GAAqBlG,aAAO,MAAO,CACvChB,KAAM,oBACN+G,KAAM,OACNI,kBAAmB,SAACnJ,EAAOoJ,GACzB,IACEC,EACErJ,EADFqJ,WAEF,MAAO,CAACD,EAAOE,KAAgC,eAA1BD,EAAWE,YAA+BH,EAAOI,oBACxE,GARyBxG,EASxB,SAAAC,GAAA,IACDoG,EAAUpG,EAAVoG,WAAU,OACNI,aAAS,CACbnC,SAAU,GACVoC,WAAY,GACe,eAA1BL,EAAWE,YAA+B,CAC3ClC,UAAW,GACX,IA+CasC,GA1CqBhG,cAAiB,SAAwBiG,EAAS7H,GACpF,IAAM/B,EAAQ6J,aAAc,CAC1B7J,MAAO4J,EACP5H,KAAM,sBAGJ2C,EACE3E,EADF2E,UAEFvE,EAAQ0J,aAA8B9J,EAAOM,IACzCyJ,EAAUpG,aAAiBqG,MAC3BX,EAAaI,aAAS,CAAC,EAAGzJ,EAAO,CACrCuJ,WAAYQ,EAAQR,aAEhBU,EA5CkB,SAAAZ,GACxB,IACEE,EAEEF,EAFFE,WACAU,EACEZ,EADFY,QAEIC,EAAQ,CACZZ,KAAM,CAAC,OAAuB,eAAfC,GAA+B,wBAEhD,OAAOY,aAAeD,EAAOpB,GAA+BmB,EAC9D,CAmCkBG,CAAkBf,GAClC,OAAoB5H,cAAKyH,GAAoBO,aAAS,CACpD9E,UAAW0F,aAAKJ,EAAQX,KAAM3E,GAC9B0E,WAAYA,EACZtH,IAAKA,GACJ3B,GACL,I,+BC9CMkK,GAAS,CAAC,qBAAsB,oBAEtC,SAASC,GAAavK,GACpB,IAAQC,EAAqCD,EAArCC,QAASuK,EAA4BxK,EAA5BwK,cAAkBpK,EAAKC,YAAKL,EAAKM,IAKlD,SAASmK,EAAoBlL,GAC3BU,EAAQV,EACV,CAEA,OACEwB,eAACC,IAAMC,wBAAA,CAAChB,QARV,WACEA,EAAQuK,EACV,EAMgC,kBAAgB,uBAA0BpK,GAAK,IAAAoB,SAAA,CAC3EC,cAACC,IAAW,CAACC,GAAG,sBAAqBH,SAAC,uBACtCT,eAACiD,IAAI,CAAAxC,SAAA,CACF8I,GAAOlI,KAAI,SAACsI,GAAK,OAChB3J,eAACoD,IAAQ,CAACC,QAAM,EAACtB,QAAS,kBAAM2H,EAAoBC,EAAM,EAAClJ,SAAA,CACzDC,cAACkI,GAAc,CAAAnI,SACbC,cAACkJ,KAAM,CAAC/D,GAAI,CAAEzD,gBAAiByH,KAAK,KAAM/H,MAAO+H,KAAK,MAAOpJ,SAC3DC,cAACoJ,KAAU,QAGfpJ,cAAC8C,IAAY,CAACC,QAASkG,MANwCA,EAOtD,IAGb3J,eAACoD,IAAQ,CAACC,QAAM,EAACtB,QAAS,kBAAM2H,EAAoB,aAAa,EAACjJ,SAAA,CAChEC,cAACkI,GAAc,CAAAnI,SACbC,cAACkJ,KAAM,CAAAnJ,SACLC,cAACqJ,KAAO,QAGZrJ,cAAC8C,IAAY,CAACC,QAAQ,yBAKhC,CAQe,SAASuG,KACtB,IAAAxK,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCJ,EAAIM,EAAA,GAAEoD,EAAOpD,EAAA,GACpBuK,EAA0CxK,mBAAS,oBAAmByK,EAAAvK,YAAAsK,EAAA,GAA/DR,EAAaS,EAAA,GAAEC,EAAgBD,EAAA,GAStC,OACElK,eAAC0F,IAAG,CAAAjF,SAAA,CACFT,eAACuE,IAAU,CAAC1C,QAAQ,YAAWpB,SAAA,CAAC,aAAWgJ,KAC3C/I,cAAA,SACAA,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAXvB,WAAH,OAASe,GAAQ,EAAM,EAW4BrC,SAAC,uBAGrEC,cAAC8I,GAAY,CAACC,cAAeA,EAAerK,KAAMA,EAAMF,QAZxC,SAACV,GACnBsE,GAAQ,GACRqH,EAAiB3L,EACnB,MAYF,CCtEA,IAAM4L,GAAYnI,YAAO,MAAPA,EAAc,SAAAC,GAAA,IAAAyC,EAAGtC,EAAKH,EAALG,MAAK,OAAAsC,EAAA,CACtCZ,OAAQ,QAAMsG,YAAA1F,EACbtC,EAAMsF,YAAYC,KAAK,MAAQ,CAAE7D,OAAQ,SAAQsG,YAAA1F,EAClD,gBAAe0F,YAAA,CACbC,aAAc,QACbjI,EAAMsF,YAAYC,KAAK,MAAQ,CAAE0C,aAAc,UAAQ3F,CAAA,IAoD7C4F,UAhDG,WAChB,OACEvK,eAACoK,GAAS,CAAA3J,SAAA,CACRC,cAACgF,IAAG,CAAC9B,UAAU,aAAYnD,SACzBC,cAAC8J,IAAU,CAACC,cAAe,CAAC,CAAExJ,KAAM,WAAYyJ,KAAM,aAAe,CAAEzJ,KAAM,eAG/EjB,eAAC2K,IAAK,CAAC1G,QAAS,EAAExD,SAAA,CAChBC,cAACkK,IAAU,CAACC,MAAM,gBAAepK,SAC/BC,cAACsJ,GAAgB,MAGnBtJ,cAACkK,IAAU,CAACC,MAAM,eAAcpK,SAC9BC,cAACoH,GAAW,MAGdpH,cAACkK,IAAU,CAACC,MAAM,aAAYpK,SAC5BC,cAAC2E,EAAgB,MAGnB3E,cAACkK,IAAU,CAACC,MAAM,cAAapK,SAC7BC,cAACoK,IAAU,MAGbpK,cAACkK,IAAU,CAACC,MAAM,oBAAmBpK,SACnCC,cAACoE,EAAiB,MAGpBpE,cAACkK,IAAU,CAACC,MAAM,qBAAoBpK,SACpCC,cAAC8E,EAAgB,MAGnB9E,cAACkK,IAAU,CAACC,MAAM,wBAAuBpK,SACvCC,cAAC8F,GAAc,MAGjB9F,cAACkK,IAAU,CAACC,MAAM,oBAAmBpK,SACnCC,cAAC+G,GAAgB,MAGnB/G,cAACkK,IAAU,CAACC,MAAM,sBAAqBpK,SACrCC,cAACgC,EAAkB,WAK7B,C","file":"static/js/17.d4fb53ad.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { styled } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n  const radioGroupRef = useRef(null);\n\n  useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  const handleCancel = () => onClose();\n  const handleOk = () => onClose(value);\n\n  const handleChange = (_, newValue) => setValue(newValue);\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      disableEscapeKeyDown\n      TransitionProps={{ onExiting: handleEntering }}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  width: '100%',\n  maxWidth: 360,\n  backgroundColor: theme.palette.background.paper,\n  '& .paper': { width: '80%', maxHeight: 435 },\n}));\n\nexport default function ConfirmationDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <DialogRoot>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n\n        <ListItem\n          button\n          divider\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n\n        <ConfirmationDialogRaw\n          keepMounted\n          open={open}\n          value={value}\n          className=\"paper\"\n          id=\"ringtone-menu\"\n          onClose={handleClose}\n        />\n      </List>\n    </DialogRoot>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst CustomizedDialogs = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport { Box } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Slide from '@mui/material/Slide';\nimport Toolbar from '@mui/material/Toolbar';\nimport { useTheme } from '@mui/system';\nimport { H6 } from 'app/components/Typography';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/system';\nimport React from 'react';\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  '& form': {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'column',\n    width: 'fit-content',\n  },\n  '& .formControl': {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  '& .formControlLabel': {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <DialogRoot>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n\n          <form noValidate>\n            <FormControl className=\"formControl\">\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{ name: 'max-width', id: 'max-width' }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              className=\"formControlLabel\"\n              label=\"Full width\"\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\n              }\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </DialogRoot>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/system';\nimport React from 'react';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import AddIcon from '@mui/icons-material/Add';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Box } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { blue } from '@mui/material/colors';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </Box>\n  );\n}\n","import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport CustomizedDialogs from './CustomizedDialog';\nimport AlertDialogSlide from './DialogTransition';\nimport FormDialog from './FormDialog';\nimport FullScreenDialog from './FullScreenDialog';\nimport MaxWidthDialog from './OptimalSizeDialog';\nimport ResponsiveDialog from './ResponsiveDialog';\nimport AlertDialog from './SimpleAlerts';\nimport SimpleDialogDemo from './SimpleDialog';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppDialog = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple Dialog\">\n          <SimpleDialogDemo />\n        </SimpleCard>\n\n        <SimpleCard title=\"alert dialog\">\n          <AlertDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <AlertDialogSlide />\n        </SimpleCard>\n\n        <SimpleCard title=\"form dialog\">\n          <FormDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized dialog\">\n          <CustomizedDialogs />\n        </SimpleCard>\n\n        <SimpleCard title=\"full-screen dialog\">\n          <FullScreenDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"optimized size dialog\">\n          <MaxWidthDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"responsive dialog\">\n          <ResponsiveDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"confirmation dialog\">\n          <ConfirmationDialog />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppDialog;\n"],"sourceRoot":""}